language: perl
# Use container-based infrastucture on Travis which doesn't support running
# things as root; see http://docs.travis-ci.com/user/migrating-from-legacy/
sudo: false
perl:
    - "5.16"
    - "5.18"
    - "5.20"
    - "5.22"
    #
    # Do not test on Perl 5.19 because 5.19.9 seems to mishandle UTF-8 source files
    # (see https://travis-ci.org/berkmancenter/mediacloud/jobs/28721908#L2803);
    # Perl 5.18 and 5.20 work fine though.
    #
    #- "5.19"
addons:
    postgresql: "9.3"
    hosts:
        - mediacloud.local
    apt:
        # Whitelist: https://github.com/travis-ci/apt-source-whitelist
        sources:
            # We need an up-to-date version of Gearman
            - gearman-developers
        # Whitelist: https://github.com/travis-ci/apt-package-whitelist
        # Keep in sync with "install_mediacloud_system_package_dependencies.sh"
        packages:
            - build-essential
            - cpanminus
            - curl
            - g++
            - gawk
            - gcc
            - graphviz
            - graphviz-dev
            - libdb-dev
            - libexpat1
            - libexpat1-dev
            - libgearman-dev
            - libgraph4
            - libgraphviz-dev
            - liblzma-dev
            - libxml2-dev
            - libxslt1-dbg
            - libxslt1-dev
            - libxslt1.1
            - libyaml-0-2
            - libyaml-dev
            - make
            - netcat
            - openjdk-7-jdk
            - openjdk-7-jre-headless
            - pandoc
            - postgresql-server-dev-all
            - python-dev
            - python-software-properties
            - python-virtualenv
            - tidy
            - xz-lzma
            - xz-utils
cache:
    directories:
        # Carton dependencies
        - local/
        # Pip cache
        - $HOME/.cache/pip
        # Python modules from "requirements.txt"
        - $HOME/mc-python/lib
before_cache:
    - rm -f $HOME/.cache/pip/log/debug.log
env:
    global:
        # Facebook Graph API credentials for testing:
        # * MC_FACEBOOK_APP_ID
        # * MC_FACEBOOK_APP_SECRET
        - secure: "GnbCg+JCTGVRaEQV/A0VDTlCLajGCw8iXdWGUv6lp9mRcOV6KlNvpawY1d23xAIywHg7BEYoAo2dt+aR8NZnpMy/kXr/E+SduBph75jrWdhmGGr+pD447AqUv/mg3lTylRWjLkjxJve5QkM/azt3FKL63lFZa0DBnaxoXJ1A+BQ="
        - secure: "Lmf9F/FVjvLYfY3KFb2qX6Kz3Z1Uf/G/KT+OtwMYFfRPy8XXIlmv1PCRT2nFx+3xCrOZVgabN2w+9kNueKE3/mK/4XSZUDhEccTQvrQEFR7Qf5WiSJ5g2qRAj7Us2R4rcHJ2KzjFzLigz3oxVG3XqRCg1aGa/iY6jf5yH07tBlY="
        # Amazon S3 test bucket credentials:
        # * MC_AMAZON_S3_TEST_ACCESS_KEY_ID
        # * MC_AMAZON_S3_TEST_SECRET_ACCESS_KEY
        # * MC_AMAZON_S3_TEST_BUCKET_NAME
        # * MC_AMAZON_S3_TEST_DIRECTORY_NAME
        - secure: "EO2zK03zb0XyWNeUlmAeMvJ8phJOS5BhDohGjt7G8rKUxm/WVRQ1OuNC9VZqHiSd/rf8wk6n11SaBca2AZeBgSM5wUdRsgGsjFIJakw7AN0YXPwh7z+xrOBE6JRmoUwlcLkQhzXVIufuJb+8cueBOlEDa5RYUfbYuLlZYQPu3ZY="
        - secure: "VC/YN3TjTtWlnmBgc8P3q+0i8CdHYZLjoi4FtwXdm/enRz1dp1Ee0ldMGd/vwdd3ewO8+na0WPiiQAnLroc/FpUbT7eA6gVScp4LU+aLgQOdLG8K2ITYWqGGoz4euCVAclZnKEI6Oht7BpjnVwfTYJUFaaQ+VPZCI4BkEnAFgPA="
        - secure: "bPq/IomE+ioZ6qeBZQiROVCapgXnQnP3RXzc+7Ry0rn0Ad54jKrtYMFamhNkSkfoAxzYw/wtvZcJ04Lj0LuZGLWgqjHmQ4IlOxxFU+DDXzOTVVXpmbbSwwJgLstxvvTZfaRPEyMxxd0mqtfFnGML2mylCjLfnFJ+UHqE5P7D85A="
        - secure: "E/NqrgbtWDYFZzXcO6tACt9HtWxQNuFalCdg5fcfUQpN0sQWbCHMs+RP3KBAoVmdCnwBAJdzyjxxv10PU4euwjALaht13UXfIq0cnNMPRuMFuiXFMI80NoIA8aKr9Wv1pxUV/oH/k8m+S5ePWOpdLSJjXi/iUO9HMxZiDM5NH94="
        # Do not ask for confirmation when running ./script/mediawords_create_db.pl
        - MEDIAWORDS_CREATE_DB_DO_NOT_CONFIRM=1
        # Enable Python API tests in ./script/run_test_suite_for_devel_cover.sh
        - MEDIACLOUD_ENABLE_PYTHON_API_TESTS=1
        # Test PythonReadability extractor method in t/test_extractor.t
        - MC_TEST_EXTRACTOR_PYTHONREADABILITY=1
before_install:
    # Set up local Media Cloud environment for Python
    - mkdir -p $HOME/mc-python
    - virtualenv $HOME/mc-python
    - source $HOME/mc-python/bin/activate
    # Create + switch to the Media Cloud's Perlbrew library
    - perlbrew lib create mediacloud
    - perlbrew switch @mediacloud
    # Install Media Cloud system package dependencies
    - ./install_modules_outside_of_carton.sh
    # (Re)install Carton dependencies (which might be restored from cache into
    # "local/" already in which case we just check if Carton is happy with the
    # current setup)
    - ./install_modules_with_carton.sh
    # Install Python dependencies
    - travis_retry pip install --upgrade pip setuptools
    - travis_retry pip install --upgrade -r python_scripts/requirements.txt
    # install Media Cloud testing variant of the Python  Client
    - travis_retry git clone https://github.com/dlarochelle/MediaCloud-API-Client.git
    - travis_retry pip install --editable MediaCloud-API-Client/
install:
    # Use default configuration
    - cp mediawords.yml.dist mediawords.yml
    # Create PostgreSQL database
    - ./install_scripts/create_default_db_user_and_databases.sh
before_script:
    # Initialize PostgreSQL database
    - ./script/run_with_carton.sh ./script/mediawords_create_db.pl
script:
    # Start Readability service for testing "PythonReadability" extractor method on t/test_extractor.t
    - "python python_scripts/extractor_python_readability_server.py &"
    # Run Media Cloud's test suite, report test coverage to https://coveralls.io/r/berkmancenter/mediacloud
    - ./script/run_test_suite_for_devel_cover.sh coveralls --destroy-solr
after_failure:
    # Print out the test log
    - echo
    - echo "Unit test(s) have failed; here's the full log:"
    - echo
    - cat data/run_test_suite.log
