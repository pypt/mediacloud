# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

#
# AWS defaults
#

# 1. Go to http://cloud-images.ubuntu.com/locator/ec2/
# 2. Enter architecture into the search box (e.g. "amd64")
# 3. Append region to the search box (e.g. "amd64 us-east-1")
# 4. Append OS version to the search box (e.g. "amd64 us-east-1 12.04")
# 5. Append "ebs" to the search box (e.g. "amd64 us-east-1 12.04 ebs")
# 6. Click the AMI to open up AWS website in order to make sure that the instance is supported
# 7. Copy the region and AMI here
AWS_AMI           = ENV['AWS_AMI']            || "ami-69f5a900"
AWS_REGION        = ENV['AWS_REGION']         || "us-east-1"
AWS_INSTANCE_TYPE = ENV['AWS_AMI']            || "t1.micro"
AWS_INSTANCE_NAME = ENV['AWS_INSTANCE_NAME']  || "Media Cloud Vagrant test box"

#
# Main configuration
#
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  #
  # on VirtualBox:
  #     vagrant up --provider=virtualbox
  #
  config.vm.provider :virtualbox do |vb|

    # Ubuntu 12.04 (64 bit)
    config.vm.box = "precise64"
    config.vm.box_url = "http://files.vagrantup.com/precise64.box"

    # Access Media Cloud's 5000 port by opening localhost:5001
    config.vm.network :forwarded_port, guest: 5000, host: 5001

  end

  #
  # on AWS EC2:
  #     vagrant plugin install vagrant-aws
  #     vagrant up --provider=aws
  #
  config.vm.provider :aws do |aws, override|

    if ENV["AWS_ACCESS_KEY_ID"].nil? ||
       ENV["AWS_SECRET_ACCESS_KEY"].nil? ||
       ENV["AWS_KEYPAIR_NAME"].nil? ||
       ENV["AWS_SSH_PRIVKEY"].nil? ||
       ENV["AWS_SECURITY_GROUP"].nil?

      err_message = <<-eos
Set the following environment variables before continuing:

    export AWS_ACCESS_KEY_ID="AKIAIOSFODNN7EXAMPLE" # The API key used to make requests to AWS
    export AWS_SECRET_ACCESS_KEY="wJalrXUtnFEMI/K7MDENG" # The secret key to make AWS API requests
    export AWS_KEYPAIR_NAME="development" # The name of the keypair used for this EC2 instance
    export AWS_SSH_PRIVKEY="~/.ssh/aws.pem" # The path to the private key for the named keypair
    export AWS_SECURITY_GROUP="default" # Security group to assign to this EC2 instance

See doc/README.vagrant.markdown for instructions on how to set those variables.
       eos

      abort(err_message)

    end

    config.vm.box = "ubuntu_aws"
    config.vm.box_url = "aws_ec2_dummy.box"

    # default username of Ubuntu ABIs
    override.ssh.username = "ubuntu"

    aws.access_key_id = ENV["AWS_ACCESS_KEY_ID"]
    aws.secret_access_key = ENV["AWS_SECRET_ACCESS_KEY"]

    # 1. https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#KeyPairs:
    # 2. "Create Key Pair", name: "development"
    # 3. Download "development.pem"
    # 4. AWS_KEYPAIR_NAME="development"
    # 5. AWS_SSH_PRIVKEY="~/path/to/development.pem"
    aws.keypair_name = ENV["AWS_KEYPAIR_NAME"]
    override.ssh.private_key_path = ENV["AWS_SSH_PRIVKEY"]

    aws.region = AWS_REGION
    aws.ami    = AWS_AMI
    aws.instance_type = AWS_INSTANCE_TYPE
    aws.tags = { 'Name' => AWS_INSTANCE_NAME }

    # 1. https://console.aws.amazon.com/ec2/home?region=us-east-1#s=SecurityGroups
    # 2. Allow Inbound SSH traffic from 0.0.0.0/0
    # 3. Allow Inbound SSH traffic of type "All" from 0.0.0.0/0
    # 4. Click "Apply Rule Changes"
    aws.security_groups = [ ENV["AWS_SECURITY_GROUP"] ]

  end

  # Hostname
  config.vm.hostname = "mediacloud.local"

  # Share Media Cloud's repository as /mediacloud
  # (path is relative to ./script/vagrant)
  config.vm.synced_folder "../../", "/mediacloud"

  # Provision scripts
  config.vm.provision "shell", privileged: true, path: "provision_root.sh"
  config.vm.provision "shell", privileged: false, path: "provision_user.sh"

end
